{"version":3,"sources":["../src/Components/Blog/ArticleCard.js","../src/Components/Blog/ArticleList.js","../src/Pages/Blog.js"],"names":["ArticleCard","Container","styled","div","props","theme","cardBackground","cardText","accents","ThumbnailContainer","Thumbnail","img","TextContainer","Title","h3","Date","p","id","thumbnailUrl","title","subtitle","dateWrittenString","history","push","propTypes","PropTypes","string","isRequired","ArticleList","FlexList","articles","map","article","date","array","Blog","articleList","setArticleList","then","data","catch","err","console","error"],"mappings":"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","file":"Blog.f8c309cf.js","sourceRoot":"../public","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport formatUtcDateString from '../../Utils/DateUtils';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color: ${(props) => props.theme.cardBackground};\n  border-radius: 4px;\n  box-shadow: 4px 4px 10px ${(props) => props.theme.cardText}90;\n  color: ${(props) => props.theme.cardText};\n  cursor: pointer;\n  :hover {\n    h3 {\n      color: ${(props) => props.theme.accents};\n    }\n  }\n`;\nconst ThumbnailContainer = styled.div`\n  display: flex;\n  padding: 0.5rem;\n  align-content: center;\n  align-items: center;\n`;\nconst Thumbnail = styled.img`\n  border-radius: 4px;\n  box-shadow: 4px 4px 10px ${(props) => props.theme.cardText}90;\n  width: 20vw;\n  height: 20vw;\n\n  @media (min-width: 992px) {\n    width: 12vh;\n    height: 12vh;\n  }\n`;\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-content: space-between;\n  padding: 0.5rem;\n`;\nconst Title = styled.h3`\n  margin: 0;\n  font-weight: normal;\n  font-size: 1.5rem;\n  color: inherit;\n  text-decoration: none;\n`;\nconst Date = styled.p`\n  font-size: 0.8rem;\n  margin-top: auto;\n`;\n\nconst ArticleCard = ({\n  id,\n  thumbnailUrl,\n  title,\n  subtitle,\n  dateWrittenString,\n}) => {\n  const history = useHistory();\n\n  return (\n    <Container onClick={() => history.push(`/blog/${id}`)}>\n      <ThumbnailContainer>\n        <Thumbnail\n          src={thumbnailUrl}\n          alt={`${title} thumbnail image`}\n        ></Thumbnail>\n      </ThumbnailContainer>\n      <TextContainer>\n        <Title>{title}</Title>\n        <p>{subtitle}</p>\n        <Date>{formatUtcDateString(dateWrittenString)}</Date>\n      </TextContainer>\n    </Container>\n  );\n};\n\nArticleCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  thumbnailUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  dateWrittenString: PropTypes.string.isRequired,\n};\n\nexport default ArticleCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n/* Components */\nimport ArticleCard from './ArticleCard';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst FlexList = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media (min-width: 992px) {\n    width: 70&;\n  }\n`;\n\nconst ArticleList = ({ articles }) => (\n  <Container>\n    <FlexList>\n      {articles.map((article) => (\n        <ArticleCard\n          key={article.id}\n          id={article.id}\n          thumbnailUrl={article.thumbnailUrl}\n          title={article.title}\n          subtitle={article.subtitle}\n          dateWrittenString={article.date}\n        />\n      ))}\n    </FlexList>\n  </Container>\n);\n\nArticleList.propTypes = {\n  articles: PropTypes.array,\n};\n\nexport default ArticleList;\n","import React, { useEffect, useState } from 'react';\nimport { getListOfArticles } from '../Utils/Requests';\n\n/* Components */\nimport PageHeading from '../Components/Layout/PageHeading';\nimport ArticleList from '../Components/Blog/ArticleList';\n\nconst Blog = () => {\n  const [articleList, setArticleList] = useState([]);\n\n  useEffect(() => {\n    getListOfArticles()\n      .then((data) => setArticleList(data))\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <>\n      <PageHeading text=\"Blog\" />\n      <ArticleList articles={articleList} />\n    </>\n  );\n};\n\nexport default Blog;\n"]}