{"version":3,"sources":["../src/Components/Blog/ArticleContent.js"],"names":["ArticleContent","Header","styled","div","HeaderImage","img","props","theme","cardText","Date","p","articleData","setArticleData","articleId","then","data","catch","err","console","error","title","date","headerImageUrl","__html","content"],"mappings":";AA8DeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA9Df,IA8DeA,EAAAA,EAAAA,EA9Df,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,oBACA,EAAA,EAAA,QAAA,sBACA,EAAA,EAAA,QAAA,0BACA,EAAA,QAAA,wBA0DeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,QAAAA,OAAAA,KAAAA,IAAAA,EAAAA,IAAAA,QAAAA,EAAAA,IAAAA,QAAAA,OAAAA,EAAAA,SAAAA,GAAAA,OAAAA,EAAAA,EAAAA,IAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,GAAAA,GAAAA,EAAAA,WAAAA,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAA,MAAAA,CAAAA,QAAAA,GAAAA,IAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAAAA,EAAAA,IAAAA,GAAAA,OAAAA,EAAAA,IAAAA,GAAAA,IAAAA,EAAAA,GAAAA,EAAAA,OAAAA,gBAAAA,OAAAA,yBAAAA,IAAAA,IAAAA,KAAAA,EAAAA,GAAAA,YAAAA,GAAAA,OAAAA,UAAAA,eAAAA,KAAAA,EAAAA,GAAAA,CAAAA,IAAAA,EAAAA,EAAAA,OAAAA,yBAAAA,EAAAA,GAAAA,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,KAAAA,OAAAA,eAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,EAAAA,QAAAA,EAAAA,GAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,IAAAA,EAAAA,EAAAA,MAAAA,IAAAA,OAAAA,OAAAA,OAAAA,iBAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,OAAAA,OAAAA,OAxDf,MAAMC,EAASC,EAAOC,QAAAA,IAAtB,IAAA,EAAA,EAAA,CAAA,2BAGMC,EAAcF,EAAOG,QAAAA,IAEGC,IAAAA,EAAAA,EAAAA,CAAAA,uDAAAA,oKAAAA,GAAUA,EAAMC,MAAMC,UAW9CC,EAAOP,EAAOQ,QAAAA,EAApB,IAAA,EAAA,EAAA,CAAA,+BAIMV,EAAiB,KACf,MAACW,EAAaC,IAAkB,EAAS,EAAA,UAAA,KACzC,UAAEC,IAAc,EAAtB,EAAA,aAYE,OAVQ,EAAA,EAAA,WAAA,MAEWA,EAAAA,EAAAA,oBAAAA,GAChBC,KAAMC,IACLH,EAAeG,KAEhBC,MAAOC,GAAQC,QAAQC,MAAMF,KAC/B,IAGD,EACE,QAAA,cAAA,EAAA,QAAA,SAAA,KAAA,EAAC,QAAA,cAAA,EACC,KAAA,EACE,QAAA,cAAA,MAAA,KAAA,EAAA,QAAA,cAAA,KAAA,CAAI,GAAG,iBAAiBN,EAAYS,OACpC,EAAC,QAAA,cAAA,EAAD,CAAM,GAAG,2BACN,EAAoBT,EAAAA,SAAAA,EAAYU,QAGrC,EAAC,QAAA,cAAA,EAAD,CACE,IAAQV,GAAAA,OAAAA,EAAYS,MADtB,iBAEE,IAAKT,EAAYW,kBAGrB,EAbF,QAAA,cAAA,KAAA,MAcE,EAAA,QAAA,cAAA,MAAA,CACE,GAAG,kBACH,wBAAyB,CAAEC,OAAQZ,EAAYa,aAMxCxB,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA","file":"ArticleContent.84568afe.js","sourceRoot":"../public","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport formatUtcDateString from '../../Utils/DateUtils';\nimport { getBlogArticleById } from '../../Utils/Requests';\n\nconst Header = styled.div`\n  display: flex;\n`;\nconst HeaderImage = styled.img`\n  border-radius: 4px;\n  box-shadow: 4px 4px 10px ${(props) => props.theme.cardText}90;\n  margin-left: auto;\n  margin-top: 1.7rem;\n  height: 18vw;\n  width: 18vw;\n\n  @media (min-width: 992px) {\n    width: 12vh;\n    height: 12vh;\n  }\n`;\nconst Date = styled.p`\n  font-size: 0.8rem;\n`;\n\nconst ArticleContent = () => {\n  const [articleData, setArticleData] = useState('');\n  const { articleId } = useParams();\n\n  useEffect(() => {\n    // fetch content from the server\n    getBlogArticleById(articleId)\n      .then((data) => {\n        setArticleData(data);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <>\n      <Header>\n        <div>\n          <h1 id=\"article-title\">{articleData.title}</h1>\n          <Date id=\"article-date-published\">\n            {formatUtcDateString(articleData.date)}\n          </Date>\n        </div>\n        <HeaderImage\n          alt={`${articleData.title} header image`}\n          src={articleData.headerImageUrl}\n        ></HeaderImage>\n      </Header>\n      <hr></hr>\n      <div\n        id=\"article-content\"\n        dangerouslySetInnerHTML={{ __html: articleData.content }}\n      ></div>\n    </>\n  );\n};\n\nexport default ArticleContent;\n"]}