{"version":3,"sources":["../src/Components/Projects/ProjectCard.js","../src/Components/Projects/ProjectGrid.js","../src/Pages/Projects.js"],"names":["ProjectCard","Flex","styled","div","props","theme","cardBackground","cardText","ImageContainer","Image","img","TitleContainer","Title","h3","Subtitle","p","id","imageUrl","title","subtitle","history","push","propTypes","PropTypes","string","isRequired","ProjectGrid","FlexGrid","projects","map","project","thumbnailUrl","array","Projects","projectList","setProjectList","then","data","catch","err","console","error"],"mappings":"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","file":"Projects.4af0b8a1.js","sourceRoot":"../public","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Flex = styled.div`\n  width: 90%;\n  display: flex;\n  flex-direction: column;\n  background-color: ${(props) => props.theme.cardBackground};\n  padding: 1rem;\n  border-radius: 4px;\n  box-shadow: 4px 4px 10px ${(props) => props.theme.cardText}90;\n  color: ${(props) => props.theme.cardText};\n  cursor: pointer;\n  transition: transform 0.2s;\n  :hover {\n    transform: scale(1.01);\n  }\n\n  @media (min-width: 992px) {\n    width: 33%;\n  }\n`;\nconst ImageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Image = styled.img`\n  border-radius: 4px;\n  box-shadow: 4px 4px 10px ${(props) => props.theme.cardText}90;\n  margin: 0.5rem;\n  width: 12rem;\n\n  @media (max-width: 768px) {\n    width: 90%;\n  }\n`;\nconst TitleContainer = styled.div`\n  padding: 0 1rem;\n  text-align: center;\n`;\nconst Title = styled.h3`\n  font-size: 1.5rem;\n  margin: 0.5rem 0;\n`;\nconst Subtitle = styled.p`\n  margin: 0.5rem 0;\n`;\n\nconst ProjectCard = ({ id, imageUrl, title, subtitle }) => {\n  const history = useHistory();\n\n  return (\n    <Flex onClick={() => history.push(`/projects/${id}`)}>\n      <ImageContainer>\n        <Image\n          src={imageUrl}\n          alt={`Preview image for ${title} project`}\n        ></Image>\n      </ImageContainer>\n      <TitleContainer>\n        <Title>{title}</Title>\n        <Subtitle>{subtitle}</Subtitle>\n      </TitleContainer>\n    </Flex>\n  );\n};\n\nProjectCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n};\n\nexport default ProjectCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n/* Components */\nimport ProjectCard from './ProjectCard';\n\nconst FlexGrid = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n  gap: 2rem;\n`;\n\nconst ProjectGrid = ({ projects }) => (\n  <FlexGrid>\n    {projects.map((project) => (\n      <ProjectCard\n        key={project.id}\n        id={project.id}\n        imageUrl={project.thumbnailUrl}\n        title={project.title}\n        subtitle={project.subtitle}\n      />\n    ))}\n  </FlexGrid>\n);\n\nProjectGrid.propTypes = {\n  projects: PropTypes.array,\n};\n\nexport default ProjectGrid;\n","import React, { useEffect, useState } from 'react';\nimport { getListOfProjects } from '../Utils/Requests';\n\n/* Components */\nimport PageHeading from '../Components/Layout/PageHeading';\nimport ProjectGrid from '../Components/Projects/ProjectGrid';\n\nconst Projects = () => {\n  const [projectList, setProjectList] = useState([]);\n\n  useEffect(() => {\n    getListOfProjects()\n      .then((data) => setProjectList(data))\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <>\n      <PageHeading text=\"Projects\" />\n      <ProjectGrid projects={projectList} />\n    </>\n  );\n};\n\nexport default Projects;\n"]}